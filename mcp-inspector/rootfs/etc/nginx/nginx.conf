worker_processes  1;
pid /var/run/nginx.pid;
error_log /proc/1/fd/1 error;
daemon off;

events {
    worker_connections  1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    sendfile            on;
    keepalive_timeout   65;
    proxy_read_timeout  1200;
    gzip                on;
    gzip_disable        "msie6";
    
    # Map for handling WebSocket connections
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    
    server {
        listen 8099;
        server_name _;
        
        allow 172.30.32.2;
        deny all;
        
        include /etc/nginx/includes/server_params.conf;
        include /etc/nginx/includes/proxy_params.conf;
    
        # Handle location updates
        location / {
            # Handle the special Home Assistant ingress URL rewrites
            rewrite  ^/(.*)$ /$1 break;
            # Handle Home Assistant ingress headers
            proxy_set_header X-Ingress-Path $http_x_ingress_path;
            proxy_set_header Accept-Encoding "";
            
            # Fix websocket connections if needed
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Pass to the MCP Inspector
            proxy_pass http://127.0.0.1:6274;
            
            # Rewrite the content to handle the ingress path
            sub_filter_once off;
            sub_filter_types *;
            
            # Rewrite paths in HTML, JS and CSS
            sub_filter 'href="/' 'href="$http_x_ingress_path/';
            sub_filter 'src="/' 'src="$http_x_ingress_path/';
            sub_filter 'url("/' 'url("$http_x_ingress_path/';
            sub_filter 'window.location.origin + "/' 'window.location.origin + "$http_x_ingress_path/';
            sub_filter 'new URL("/' 'new URL("$http_x_ingress_path/';
            
            # Handle various types of content
            sub_filter_types application/javascript text/css text/javascript;
        }
    }
} 